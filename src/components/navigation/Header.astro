---
import HeaderLink from "./HeaderLink.astro";
import { Image } from "astro:assets";
import logo from "../../assets/svgs/CS-logo.svg";
---

<header>
  <nav id="nav">
    <div class="container">
      <a href="/" class="logo" aria-label="back to home">
        <Image
          priority
          src={logo}
          alt="Crescendo Stage"
          width={309}
          height={60}
        />
      </a>
      <div class="desktop-links">
        <HeaderLink href="/services">Products & Services</HeaderLink>
        <HeaderLink href="/about-us">About Us</HeaderLink>
        <HeaderLink id="contact" href="/contact">Contact Us</HeaderLink>
      </div>
    </div>

    <button
      id="nav-toggle"
      class="hamburger"
      aria-label="Mobile menu toggle"
      aria-controls="mobile-nav"
      aria-expanded="false"
    >
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
    </button>
    <div id="mobile-nav" class="mobile-links" data-visible="false">
      <HeaderLink href="/services">Products & Services</HeaderLink>
      <HeaderLink href="/about-us">About Us</HeaderLink>
      <HeaderLink href="/contact">Contact</HeaderLink>
    </div>
  </nav>
</header>

<style lang="scss">
  @use "@styles" as *;
  @use "sass:color";
  // header as container
  header {
    container-type: inline-size;
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    z-index: 99;
  }
  // mobile header, with shrink effect
  nav {
    display: grid;
    grid-template-columns:
      1fr minmax(0, calc($content-width / 2)) minmax(
        0,
        calc($content-width / 2)
      )
      1fr;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 0.75rem 1.25rem;
    background: $light;
    box-shadow: 0 2px 4px rgba($dark, 0.12);
    transform: scaleX(1) translateY(0);
    transform-origin: top center;
    margin-inline: auto;
    border-radius: 0;
    will-change: transform;
    overflow-anchor: none;
    @include transition-slow(
      transform,
      width,
      padding,
      box-shadow,
      border-radius
    );
    .container {
      flex-direction: row;
      justify-content: space-between;
    }
    .logo {
      transform-origin: center left;
      @include transition-slow(height);
      height: 40px;
      img {
        @include transition-slow(height);
        width: auto;
        height: 40px;
      }
    }
    .desktop-links,
    .hamburger,
    #contact {
      transform-origin: center right;
    }
    &.is-shrunk {
      transform: translateY(2rem);
      width: calc(100% - 2rem);
      border-radius: 1rem;
      padding: 0.5rem 1rem;
      box-shadow: 0 4px 8px rgba($dark, 0.12);

      .logo,
      .desktop-links,
      .hamburger,
      #contact {
        transform: scale(0.9);
      }
      .hamburger {
        &:hover,
        &:focus-visible {
          animation: breathe-sm 2s ease-in-out infinite;
        }
      }
    }
    .desktop-links {
      display: none;
      white-space: nowrap;
    }
    .logo,
    .desktop-links,
    .hamburger,
    #contact {
      transform: scale(1);
      transition: transform 0.35s ease;
    }
  }

  // burger menu style, variables to ensure lines are square
  $hamburger-width: 40px;
  $hamburger-height: 24px;
  $patty-height: 4px;
  .hamburger {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    position: relative;
    width: $hamburger-width;
    height: $hamburger-height;
    border: none;
    background: transparent;
    cursor: pointer;
    transition: transform 0.3s ease;
    z-index: 99;
    &:hover,
    &:focus-visible {
      animation: breathe-full 2s ease-in-out infinite;
    }
    span {
      display: block;
      position: absolute;
      height: $patty-height;
      width: 100%;
      background: $brand-primary;
      border-radius: 8px;
      @include transition-slow(all);
      &:nth-child(1) {
        transform: translateY(
          calc(($hamburger-height - $patty-height) / 2 * -1)
        );
      }

      &:nth-child(2),
      &:nth-child(3) {
        transform: translateY(0);
        width: 75%;
      }

      &:nth-child(4) {
        transform: translateY(calc(($hamburger-height - $patty-height) / 2));
      }
    }

    &.open span {
      &:nth-child(1) {
        transform: translateY(0) translateX(calc($hamburger-width / 2));
        width: 0%;
        transform-origin: top center;
      }
      &:nth-child(2),
      &:nth-child(3) {
        width: 100%;
      }
      &:nth-child(2) {
        transform: rotate(45deg);
      }
      &:nth-child(3) {
        transform: rotate(-45deg);
      }
      &:nth-child(4) {
        transform: translateY(0) translateX(calc($hamburger-width / 2));
        width: 0%;
        transform-origin: top center;
      }
    }
  }

  // mobile slide-in drawer
  .mobile-links {
    display: flex;
    position: fixed;
    font-size: var(--font-size-md);
    inset-block-start: 0;
    inset-inline-end: 0;
    width: 35vw;
    min-width: 200px;
    height: 100vh;
    padding-top: 5rem;
    align-items: flex-end;
    background: $light;
    font-weight: $bold;
    flex-direction: column;
    gap: 0.25rem;
    transform: translateX(120%);
    @include transition-slow(transform, box-shadow);
    box-shadow: none;
    text-align: right;
    z-index: 10;

    &[data-visible="true"] {
      transform: translateX(0);
      box-shadow: -8px 0 16px rgba($dark, 0.12);
    }

    a {
      width: 100%;
      padding: 1rem;
      @include transition-fast(background-color);
      &:hover,
      &:focus-visible {
        background-color: $off-white-bg;
      }
    }
  }

  // Undo the shrink effects when mobile menu is open
  nav:has([data-visible="true"]) {
    transform: scale(1) translateY(0);
    width: 100%;
    border-radius: 0;
    padding: 0.75rem 1.25rem;
    .logo,
    .desktop-links,
    .hamburger,
    #contact {
      transform: scale(1);
    }
    .hamburger {
      &:hover,
      &:focus-visible {
        animation: breathe-full 2s ease-in-out infinite;
      }
    }
  }

  // tablet style adjustments
  @include container-query(tablets) {
    nav {
      padding: 1.5rem 2rem;
      .logo {
        height: 44px;
        & img {
          height: 44px;
        }
      }
      &.is-shrunk {
        transform: translateY(2rem);
        width: calc(100% - 4rem);
        border-radius: 2rem;
        box-shadow: 0 4px 8px rgba($dark, 0.12);
        padding: 1rem 1.5rem;
      }
      .desktop-links {
        display: flex;
        align-items: center;
        gap: 2.5rem;
        font-size: var(--font-size-base-md);
        #contact {
          font-size: var(--font-size-base-md);
        }
        font-weight: bold;
      }
      #contact {
        @include btn-base;
        padding: 0.5rem 3rem;
      }
      .hamburger,
      .mobile-links {
        display: none;
      }
    }
  }
  @include container-query(small-laptop) {
    nav {
      .logo {
        height: 55px;
        & img {
          height: 55px;
        }
      }
      .desktop-links {
        font-size: var(--font-size-base-md);
        #contact {
          font-size: var(--font-size-base-md);
        }
      }
    }
  }
</style>

<script is:inline>
  const nav = document.getElementById("nav");
  const shrink_threshold = 50;
  const expand_threshold = 20;
  let isShrunk = false;

  const onScroll = () => {
    const y = window.scrollY;
    if (!isShrunk && y > shrink_threshold) {
      nav.classList.add("is-shrunk");
      isShrunk = true;
    } else if (isShrunk && y <= expand_threshold) {
      nav.classList.remove("is-shrunk");
      isShrunk = false;
    }
  };

  window.addEventListener("scroll", onScroll, { passive: true });
  onScroll();

  const toggle = document.getElementById("nav-toggle");
  const mobileMenu = document.getElementById("mobile-nav");

  toggle.addEventListener("click", () => {
    const isOpen = toggle.getAttribute("aria-expanded") === "true";
    toggle.setAttribute("aria-expanded", !isOpen);
    mobileMenu.dataset.visible = String(!isOpen);
    toggle.classList.toggle("open", !isOpen);
  });
</script>
