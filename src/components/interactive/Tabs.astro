---
import { getCollection, render } from "astro:content";
import TabItem from "./TabItem.astro";

const tabs = await getCollection("tabs");

const rendered = await Promise.all(
  tabs.map(async (tab) => {
    const { Content } = await render(tab);
    return { data: tab.data, Content };
  })
);
---

<div class="tabs">
  <nav class="tab-options">
    {
      rendered.map(({ data }, i) => (
        <button class={`tab-option${i === 0 ? " active" : ""}`} data-index={i}>
          {data.title}
        </button>
      ))
    }
  </nav>

  <div class="tab-panels">
    {
      rendered.map(({ Content }, i) => (
        <TabItem data-index={i} class="tab-item">
          <Content />
        </TabItem>
      ))
    }
  </div>
</div>

<style lang="scss">
  @use "@styles" as *;

  .tabs {
    display: flex;
    flex-direction: column;
    gap: 2rem;

    .tab-options {
      display: flex;
      width: max-content;
      gap: 1.5rem;
      border-bottom: 2px solid $brand-text;
      
      .tab-option {
        border: none;
        border-bottom: 4px solid transparent;
        font-size: var(--font-size-md);
        background: none;
        color: $brand-text;
        cursor: pointer;
        @include transition-slow(color);
        position: relative;
        z-index: 1;

        &::after {
          content: '';
          position: absolute;
          left: 0;
          bottom: -6px;
          width: 100%;
          height: 4px;
          background: $brand-action;
          transform: scaleX(0);
          transform-origin: left;
          transition: transform 0.3s cubic-bezier(0.4,0,0.2,1);
          pointer-events: none;
        }

        &.active {
          color: $brand-action;
        }
        &.active::after {
          transform: scaleX(1);
        }
        &:hover:not(.active) {
          color: $brand-action;
        }
      }
    }
    }
  
</style>

<script is:inline>
  const tabs = document.querySelectorAll(".tab-option");
  const panels = document.querySelectorAll(".tab-item");
  let prevIndex = 0;
  panels[0].classList.add("active");
  tabs[0].classList.add("from-left");
  tabs.forEach((tab, idx) => {
    tab.addEventListener("click", () => {
      const i = Number(tab.dataset.index);
      if (tabs[i].classList.contains("active")) return;
      tabs.forEach((t, j) => {
        t.classList.remove("active", "from-left", "from-right");
        if (j === i) {
          t.classList.add("active", i > prevIndex ? "from-left" : "from-right");
        }
      });
      panels.forEach((p) =>
        p.classList.toggle("active", p.dataset.index == i)
      );
      prevIndex = i;
    });
  });
</script>
